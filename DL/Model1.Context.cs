//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AGutierrezCRUDBancoEntities : DbContext
    {
        public AGutierrezCRUDBancoEntities()
            : base("name=AGutierrezCRUDBancoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CuentaBancaria> CuentaBancarias { get; set; }
    
        public virtual int CuentaBancariaAddRealizarDeposito(string numeroDeCuenta, Nullable<decimal> saldo, string titular)
        {
            var numeroDeCuentaParameter = numeroDeCuenta != null ?
                new ObjectParameter("NumeroDeCuenta", numeroDeCuenta) :
                new ObjectParameter("NumeroDeCuenta", typeof(string));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var titularParameter = titular != null ?
                new ObjectParameter("Titular", titular) :
                new ObjectParameter("Titular", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CuentaBancariaAddRealizarDeposito", numeroDeCuentaParameter, saldoParameter, titularParameter);
        }
    
        public virtual ObjectResult<CuentaBancariaGetAllConsultaSaldo_Result> CuentaBancariaGetAllConsultaSaldo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CuentaBancariaGetAllConsultaSaldo_Result>("CuentaBancariaGetAllConsultaSaldo");
        }
    
        public virtual ObjectResult<Nullable<decimal>> CuentaBancariaDeleteRetirarDeposito(Nullable<decimal> saldoARetirar)
        {
            var saldoARetirarParameter = saldoARetirar.HasValue ?
                new ObjectParameter("SaldoARetirar", saldoARetirar) :
                new ObjectParameter("SaldoARetirar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CuentaBancariaDeleteRetirarDeposito", saldoARetirarParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SumaSaldo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SumaSaldo");
        }
    
        public virtual ObjectResult<Nullable<decimal>> RetirarDeposito(string numeroDeCuenta, Nullable<decimal> saldo, Nullable<decimal> saldoARetirar)
        {
            var numeroDeCuentaParameter = numeroDeCuenta != null ?
                new ObjectParameter("NumeroDeCuenta", numeroDeCuenta) :
                new ObjectParameter("NumeroDeCuenta", typeof(string));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(decimal));
    
            var saldoARetirarParameter = saldoARetirar.HasValue ?
                new ObjectParameter("SaldoARetirar", saldoARetirar) :
                new ObjectParameter("SaldoARetirar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RetirarDeposito", numeroDeCuentaParameter, saldoParameter, saldoARetirarParameter);
        }
    }
}
